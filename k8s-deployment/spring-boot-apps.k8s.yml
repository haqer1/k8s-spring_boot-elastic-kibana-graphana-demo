apiVersion: v1
kind: Namespace
metadata:
  name: k8s-spring-boot-apps
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: default
  namespace: k8s-spring-boot-apps
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-be
  namespace: k8s-spring-boot-apps  
data:
  application.yml: |-
    k8s-be:
      message: "Message in a bottle"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-be
  namespace: k8s-spring-boot-apps
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s-be
  template:
    metadata:
      labels:
        app: k8s-be
        fluentd-log-format: spring-boot-json
      annotations:
           prometheus.io/scrape: 'true'
           prometheus.io/path: '/actuator/prometheus'
           prometheus.io/port: '80'        
    spec:
      containers:
      - name: k8s-be-container
        image: gcr.io/handy-zephyr-272321/k8s-be:latest
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 80
          timeoutSeconds: 5
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-be
  namespace: k8s-spring-boot-apps  
spec:
  type: NodePort
  selector:
    app: k8s-be
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30001    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-bff
  namespace: k8s-spring-boot-apps
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s-bff
  template:
    metadata:
      labels:
        app: k8s-bff
        fluentd-log-format: spring-boot-json
      annotations:
           prometheus.io/scrape: 'true'
           prometheus.io/path: '/actuator/prometheus'
           prometheus.io/port: '80'        
    spec:
      containers:
      - name: k8s-bff-container
        image: gcr.io/handy-zephyr-272321/k8s-bff:latest
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 80
          timeoutSeconds: 5
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 1        
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-bff
  namespace: k8s-spring-boot-apps    
spec:
  type: NodePort
  selector:
    app: k8s-bff
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30002    
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-sba
  namespace: k8s-spring-boot-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-sba
  template:
    metadata:
      labels:
        app: k8s-sba
        fluentd-log-format: spring-boot-json
      annotations:
           prometheus.io/scrape: 'true'
           prometheus.io/path: '/actuator/prometheus'
           prometheus.io/port: '80'        
    spec:
      containers:
      - name: k8s-sba-container
        image: gcr.io/handy-zephyr-272321/k8s-sba:latest
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 80
          timeoutSeconds: 5
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 1        
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-sba
  namespace: k8s-spring-boot-apps
spec:
  type: NodePort
  selector:
    app: k8s-sba
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30003